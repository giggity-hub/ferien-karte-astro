<div class=" text-center py-6 ">
    
    <div class="inline">
        <custom-select type="year" id="year-select" ></custom-select>
        <span>/</span>
        <custom-select type="month" id="month-select" ></custom-select>
        <span>/</span>
        <custom-select type="day" id="date-select"></custom-select>
    </div>

</div>
<script>
    import { app } from "../scriptsschmipts/data"
    
    const $monthSelect = document.getElementById('month-select')
    const $yearSelect = document.getElementById('year-select')
    const $dateSelect = document.getElementById('date-select')

    const months = ['Jan', 'Feb', 'MÃ¤rz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']
    $monthSelect.setEntries(months)
    $yearSelect.setEntries(Object.fromEntries(years.map(y => [y, y])))
    setMonthShit(app.$selectedDate.value)

    $monthSelect.addEventListener('change', (e)=>{
        const d = app.$selectedDate.value
        let [year, month, date] = [d.getFullYear(), d.getMonth(), d.getDate()]
        // console.log(year,month, date)
        const monthIndex = parseInt(e.target.value);
        const newDate = new Date(year, monthIndex+1, 0);
        const minDate = Math.min(newDate.getDate(), date)
        newDate.setDate(minDate)
       
        app.$selectedDate.value = newDate
    })

    $yearSelect?.addEventListener('change', (e)=>{
        const year = e.target.value;
        const date = new Date(app.$selectedDate.value.getTime())
        app.$selectedDate.value = new Date(date.setFullYear(year))
    })

    $dateSelect?.addEventListener('change', (e)=>{
        const day = e.target.value;
        const date = new Date(app.$selectedDate.value.getTime())
        app.$selectedDate.value = new Date(date.setDate(day))
    })

    function getDaysInMonth(year, monthIndex){
        // Month in JavaScript is 0-indexed (January is 0, February is 1, etc), 
        // but by using 0 as the day it will give us the last day of the prior
        // month. So passing in 1 as the month number will return the last day
        // of January, not February
        const numberOfDays = new Date(year, monthIndex+1, 0).getDate();
        const days = {}
        for (let d = 1; d <= numberOfDays; d++) {
           days[d] = d 
        }
        return days;
    }


    function setMonthShit(newVal: Date){
        const monthIndex = newVal.getMonth()
        const year = newVal.getFullYear()
        const days = getDaysInMonth(year, monthIndex);

        $dateSelect.setEntries(days)
    }

    app.$selectedDate.listen((newVal, oldVal)=>{
        const [year, month, date] = [newVal.getFullYear(), newVal.getMonth(), newVal.getDate()]
        $monthSelect.value = month;
        $yearSelect.value = year;
        $dateSelect.value = date;

        const monthIndex = newVal.getMonth()
        if (monthIndex != oldVal.getMonth()) {
            setMonthShit(newVal)
            // set the number to the previous number of days
        }
    })


    
    

</script>