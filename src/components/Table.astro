---
import { holidays, bundeslaender } from "../data";
import { dateToPercentageOfYearFactory } from "../utils";

// const years = Object.keys(holidays).toSorted().map(x => parseInt(x))
const years = [2023, 2024, 2025]
const firstDate = + new Date(years[0], 0, 1)
const lastDate = + new Date(years[years.length -1], 11, 31)

const widthOf24hInPx = 5;
const milliSecondsIn24h = 86400000

function scale(date: number){
    return (date/milliSecondsIn24h) * widthOf24hInPx
}


function calculateStyle(h: Holiday){
    const start = +new Date(h.start)
    const end = +new Date(h.end)
    const left =  start - firstDate
    const width = end - start
    return {
        left: scale(left) + 'px',
        width: scale(width) + 'px'
    }
}

const months = ['Jan', 'Feb', 'MÃ¤rz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']

---

<div id="holiday-table" class="holiday-table" style={{width: scale(lastDate - firstDate) + 'px'}}>
    <div class="tick-marks">
        {years.map(year => {
            return months.map((month, index)=>{
                const date = new Date(year, index, 1)
                const style = {transform: `translateX(${scale(+date - firstDate)}px)`}
                return <div class="tick" style={style}>
                        <div class="tick__label">{month}</div>
                        <div class="tick__line"></div>
                    </div>
            })

        })}
    </div>
    {bundeslaender.map(bid => ( 
        <div data-bundesland={bid} class="relative holiday-table__row">
            {Object.entries(holidays).map(([year, holidaysForYear])=>{
                return holidaysForYear[bid].map(hol => (
                    <div  data-holiday-id={hol.id} class="holiday absolute bg-red-500" style={calculateStyle(hol)}></div>
                ))
            })}
        </div>
    ))}
        
</div>
<script>
    import { app } from "../scriptsschmipts/data"

    const $elements = document.getElementsByClassName('holiday-table__row') as HTMLCollectionOf<HTMLDivElement>
    for (const element of $elements) {
        const bid = element.getAttribute('data-bundesland')
        element.addEventListener('mouseenter', (e)=>{
            app.$hoveredBundeslandId.value = bid;
        })
    }

    const $table = document.getElementById('holiday-table')!
    let $hoveredRow: HTMLElement | null = null;
    app.$hoveredBundeslandId.subscribe(newVal=>{
        $hoveredRow?.classList.remove('is-hover')
        $hoveredRow = $table.querySelector(`[data-bundesland="${newVal}"]`)
        $hoveredRow?.classList.add('is-hover')
    })

    const highlightedTableElements = {}
    app.$currentHolidayIn.subscribe((newVal, oldVal, bid)=>{
        if (highlightedTableElements[bid]) {
            highlightedTableElements[bid].classList.remove('is-current')
        }

        if (newVal) {
            const $newHolidayInTable = $table?.querySelector(`[data-holiday-id="${newVal.id}"]`)
            $newHolidayInTable?.classList.add('is-current')
            highlightedTableElements[bid] = $newHolidayInTable;
        }else{
            highlightedTableElements[bid] = null;
        }
    })




</script>

<style>
    .tick{
        height: 100%;
        top: 0;
        position: absolute;
    }
    .tick__line{
        /* height: 100%; */
        height: 100%;
        /* background: blue; */
        color: white;
        /* border-left: 1px solid white; */
        box-shadow: 0px 0px 0px 1px white;
        position: absolute;
        color: white;
        font-size: 20px;
        top: 0;
    }
    .tick__label{
        height: 10px;
        font-size: 20px;
        position: absolute;
        top: 0;
        color: white;
        padding-left: 10px;

    }
    .tick-marks{
        pointer-events: none;
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        /* background: red; */
        opacity: 0.5;
    }
    .holiday-table{
        /* height of the month labels */
        padding-top: var(--table-label-height);
        --holiday-table-row-height: 40px;
        cursor: pointer;
        
    }
    .holiday-table__row{
        height: var(--table-row-height);
        margin-bottom: var(--holiday-table-row-gap);
        /* padding-top: 30px; */
    }
    .holiday{
        /* transform: translateY(calc(var(--holiday-table-row-height)/2)); */
        top: 0;
        bottom:0;
        margin: auto 0;

        --bg-color: hsl(var(--hue), 30%, 50%);
        border-radius: 1px;
        background: var(--bg-color);
        border-radius: 3px;
        --box-shadow-spread: 5px;
        height: 10px;
        box-shadow: 
        0px 0px 0px var(--box-shadow-spread) var(--bg-color),
            0px 0px 10px 10px rgba(0,0,0,0.5);
    }
    .holiday.is-current{
        --bg-color: hsl(var(--hue), 100%, 50%);
    }
    .holiday-table__row.is-hover{
        background: hsl(200, 100%, 10%);
    }
</style>