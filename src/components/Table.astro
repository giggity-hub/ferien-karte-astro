---
// import { holidays, bundeslaender } from "../data";
import holidays from '../schulferien.json'
import {bundeslaender} from '../scriptsschmipts/data.ts'
// TODO don't hardcode the years
const years = [2023, 2024, 2025]
const firstDate = + new Date(years[0], 0, 1)
const lastDate = + new Date(years[years.length -1], 11, 31)

const widthOf24hInPx = 5;
const milliSecondsIn24h = 86400000

function scale(date: number){
    return (date/milliSecondsIn24h) * widthOf24hInPx
}


function calculateStyle(h: Holiday){
    const start = +new Date(h.start)
    const end = +new Date(h.end)
    const left =  start - firstDate
    const width = end - start
    return {
        left: scale(left) + 'px',
        width: scale(width) + 'px'
    }
}

const months = ['Jan', 'Feb', 'MÃ¤rz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']

---

<!-- The labels which are oveerlayed on the left -->
<div id="county-labels" slot="overlay">
    {bundeslaender.map(bid=>( 
        <div class="county-label">{bid}</div>
    ))}
</div>


<div slot="content"  id="holiday-table" class="holiday-table" style={{width: scale(lastDate - firstDate) + 'px'}}>

    <div class="tick-marks">
        {years.map(year => {
            return months.map((month, index)=>{
                const date = new Date(year, index, 1)
                const style = {transform: `translateX(${scale(+date - firstDate)}px)`}
                return <div class="tick" style={style}>
                        <div class="tick__label">{month}</div>
                        <div class="tick__line"></div>
                    </div>
            })
        })}
    </div>
    {bundeslaender.map(bid => ( 
        <div data-bundesland={bid} class="holiday-table__row">
            {Object.entries(holidays).map(([year, holidaysForYear])=>{
                return holidaysForYear[bid].map(hol => (
                    <div  data-holiday-id={hol.id} class="holiday" style={calculateStyle(hol)}></div>
                ))
            })}
        </div>
    ))}
        
</div>

<bounded-tooltip bounds="scrollable-range-input" for="#table-tooltip">
    <div id="#table-tooltip"></div>
</bounded-tooltip>


<script>
import { holidayLookup } from "../scriptsschmipts/data";

const $tableTooltip = document.querySelector('#table-tooltip')

    function togglePopover(e){
        const hid = e.currentTarget.dataset.holidayId
        const holiday = holidayLookup[hid];

        console.log($tableTooltip)
        $tableTooltip.textContent = holiday.holiday_type + holiday.start + holiday.end;

        // console.log(e.currentTarget.dataset['holiday-id'])
    }

    const $holidays = document.querySelectorAll('.holiday');
    $holidays.forEach($el =>{
        $el.addEventListener('click', togglePopover)
    })
</script>

<style>
    #county-labels{
        padding-top: 20px;
        display: flex;
        flex-direction: column;
        height: 100%;
        /* --bg-color: hsla(var(--hue), 30%, 22%, .8); */
        background: rgba(0,0,0,0.3);
        /* box-shadow: 0 0 10px 5px var(--bg-color); */
        /* padding-top: var(--table-label-height); */
        /* z-index: 1; */
        width: 50px;
        /* display: table */
        display: grid;
        justify-items: center;
        align-items: center
    }
    .county-label{
        /* height: var(--table-row-height); */
        color: white;
        flex-grow: 1;
        display: table-cell;
        /* vertical-align: middle; */
    }



    .tick{
        height: 100%;
        top: 0;
        position: absolute;
    }
    .tick__line{
        /* height: 100%; */
        height: 100%;
        /* background: blue; */
        color: white;
        /* border-left: 1px solid white; */
        box-shadow: 0px 0px 0px 1px white;
        position: absolute;
        color: white;
        font-size: 20px;
        top: 0;
    }
    .tick__label{
        height: 10px;
        font-size: 20px;
        position: absolute;
        top: 0;
        color: white;
        padding-left: 10px;

    }
    .tick-marks{
        pointer-events: none;
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        /* background: red; */
        opacity: 0.5;
    }
    .holiday-table{
        /* height of the month labels */
        padding-top: var(--table-label-height);
        --holiday-table-row-height: 40px;
        /* cursor: pointer; */
        position: relative;
        
    }

    .holiday-table__row{
        position: relative;
        height: var(--table-row-height);
        margin-bottom: var(--holiday-table-row-gap);
        /* padding-top: 30px; */
    }

    .holiday-table__row.is-hover{
        background-color: rgba(255,255,255, 0.5);
    }

    .holiday{
        /* transform: translateY(calc(var(--holiday-table-row-height)/2)); */
        top: 0;
        bottom:0;
        margin: auto 0;

        --bg-color: hsl(var(--hue), 30%, 50%);
        border-radius: 1px;
        background: var(--bg-color);
        border-radius: 3px;
        --box-shadow-spread: 5px;
        height: 10px;
        box-shadow: 
        0px 0px 0px var(--box-shadow-spread) var(--bg-color),
            0px 0px 10px 10px rgba(0,0,0,0.5);

        position: absolute
    }
    .holiday.is-current-holiday{
        --bg-color: hsl(var(--hue), 100%, 50%);
    }

</style>